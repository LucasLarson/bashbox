#!/bin/bash
#ed in pure bash.
insert() {
	while true
	do
		read -r line
		if [ -z "$line" ]; then continue
		elif [ "$line" = . ]; then break
		else
			linee="$linee
$line"
		fi
	done
}
deleteline() {
	n=0
	linee=$(
		echo "$linee" | while read -r lined
		do
			if [ $n = "$linen" ]; then true
			else echo "$lined"
			fi
			((n++))
		done
	)
}
changeline() {
	n=0
	linee=$(
		echo "$linee" | while read -r lined
		do
			if [ $n = "$linen" ]; then
				read -r linec < /dev/tty
				echo "$linec"
			else echo "$lined"
			fi
			((n++))
		done
	)
}
insert() {
	n=0
	linee=$(
		echo "$linee" | while read -r lined
		do
			if [ $n = "$linen" ]; then
				read -r linec < /dev/tty
				echo "${linec}${lined}"
			else echo "$lined"
			fi
			((n++))
		done
	)
}
numberline() {
	n=0
	echo "$linee" | while read -r line
	do
		echo "$n $line"
		((n++))
	done
}
writee() {
	[ -z "$linee" ] && echo 'error: have no content'
	[ -z "$file" ] && echo 'no file specified'
	echo "$linee" > "$file"
	echo ${#linee}
}
#execute
linee=
linen=0
[ -n "$1" ] && file="$1"
if [ -f "$file" ]; then
	linee="$(<"$file")"
	echo ${#linee}
fi
while true
do
	read -rp ': ' command
	commandar=($command)
	if [ -z "$command" ]; then echo '?' && continue
	elif [ "$command" = a ]; then insert
	elif [ "$command" = q ]; then exit
	elif [ "$command" = d ]; then deleteline
	elif [ "$command" = c ]; then changeline
	elif [ "$command" = c ]; then insert
	elif [ "$command" = '+' ]; then ((linen++))
	elif [ "$command" = '-' ]; then ((linen--))
	elif [ "$command" = nl ]; then numberline
	elif [ "$command" = w ]; then writee
	elif [ "$command" = wq ]; then writee; exit
	elif [ "$command" = p ]; then echo "${linee##*$'\n'}"
	elif [ "$command" = ',p' ]; then echo "$linee"
	elif [ "${commandar[0]}" = f ]; then file="${commandar[1]}"
	elif [ "${commandar[0]}" = g ]; then linen="${commandar[1]}"
	else
		echo "?"
	fi
done
