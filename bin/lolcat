#!/bin/bash
#based on https://github.com/yokkidack/shaverma
#generate colors
repeat() {
	[[ -z $1 ]] && {
	    printf '%s\n' "seq: error: missing arguments." >&2
	    exit 1
	}
	
	[[ $2 ]] &&
	    first="$1"
	
	[[ $3 ]] &&
	    increment="$2"
	
	last="${*: -1}"
	
	for ((i=${first:=1};i<=last;i+=${increment:=1})); {
	    printf '%s\n' "$i"
	}
	
}
gencol(){
	for a in $(repeat 255)
	do
		echo "\033[38;5;${a}m"
	done
}
igencol(){
	for a in $(repeat 255)
	do
		echo "\033[48;5;${a}m"
	done
}
#help
printhelp(){
	Rainbow=($(gencol))
	lolcate "
Usage: lolcat [OPTION]...

Concatenate standard input, to standard output

  -i, --invert          Invert fg and bg
  -h, --help            Show this message
  -v, --version         Print version and exit

Examples:
  echo hello | bashbox lolcat   prints hello in rainbow

"
	exit
}
index=0
lolcate(){
    string=$1
    #((j=$index % ${#Rainbow}))
    ((j=$index % 256))
    ((index++))
    for (( i=0; i<${#string}; i++ )); do
        ((j++))
        #if (($j == ${#Rainbow}))
        if (($j == 256))
        then
            ((j=0))
        fi
      echo -ne "${Rainbow[$j]}${string:$i:1}"
    done
    printf "\033[0;0m"
}
case "$1" in
	"-i"|"--invert") Rainbow=($(igencol));;
	"-h"|"--help") printhelp;;
	"-v"|"--version") echo "bashbox lolcat";exit;;
	*)Rainbow=($(gencol));;
esac
	

IFS=$'\n'

while read string
do
    lolcate $string
done
